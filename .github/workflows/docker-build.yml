name: Docker Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]


env:
  CARGO_TERM_COLOR: always

jobs:
  cancel-previous:
    name: Cancel Previous
    runs-on: ubuntu-latest
    steps:
      - uses: styfle/cancel-workflow-action@0.12.1
        with:
          access_token: ${{ github.token }}

  # Run tests.
  # See also https://docs.docker.com/docker-hub/builds/automated-testing/
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      max-parallel: 1
      matrix:
        image: [client, web]
        include:
          - image: client
            push: true
            Dockerfile: ./Dockerfile.client
          - image: web
            push: false
            Dockerfile: ./Dockerfile
    env:
      IMAGE: mbround18/ark-manager-${{matrix.image}}
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: mbround18
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Docker meta
        id: meta
        uses: crazy-max/ghaction-docker-meta@v5
        with:
          # list of Docker images to use as base name for tags
          images: |
            ${{ env.IMAGE }}

          # generate Docker tags based on the following events/attributes
          tags: |
            type=sha

      - name: Build ${{ matrix.image }}
        id: docker_build
        uses: docker/build-push-action@v6
        with:
          file: ${{ matrix.Dockerfile }}
          push: ${{ matrix.push }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{ env.IMAGE }}:buildcache
          cache-to: type=registry,ref=${{ env.IMAGE }}:buildcache,mode=max

      - name: Finalization
        run: echo "Finalized"


